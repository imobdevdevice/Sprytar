 - Bundle id in all 3 party library.
    Fabric (Done)
    Facebook (Done)
    GA
    Wikitude

 - Links and HyperlinksAndroid  - Done
 - Search function in locations doesn't workAndroid -- Darshan working
 - The compass doesn't point the right wayAndroid -- Rujul
 - AR screen only to appear when you are less then 20m awayAndroid --
 - The Spryte is too jumpyAndroid - The Range is not accurate enoughAndroid
 - Remove message saying "Distsnce 10.0"Android  -- Done
 - Update Google Play ServicesHiAndroid -- Not issue
 - AR screen is shown when >20m --


//        final float alpha = 0.97f;
//        synchronized (this) {
//            if (event.sensor.getType() == Sensor.TYPE_ACCELEROMETER) {
//
//                mGravity[0] = alpha * mGravity[0] + (1 - alpha)
//                        * event.values[0];
//                mGravity[1] = alpha * mGravity[1] + (1 - alpha)
//                        * event.values[1];
//                mGravity[2] = alpha * mGravity[2] + (1 - alpha)
//                        * event.values[2];
//
//                // mGravity = event.values;
//
//                // Log.e(TAG, Float.toString(mGravity[0]));
//            }
//
//            if (event.sensor.getType() == Sensor.TYPE_MAGNETIC_FIELD) {
//                // mGeomagnetic = event.values;
//
//                mGeomagnetic[0] = alpha * mGeomagnetic[0] + (1 - alpha)
//                        * event.values[0];
//                mGeomagnetic[1] = alpha * mGeomagnetic[1] + (1 - alpha)
//                        * event.values[1];
//                mGeomagnetic[2] = alpha * mGeomagnetic[2] + (1 - alpha)
//                        * event.values[2];
//                // Log.e(TAG, Float.toString(event.values[0]));
//
//            }
//
//
//            float R[] = new float[9];
//            float I[] = new float[9];
//            boolean success = SensorManager.getRotationMatrix(R, I, mGravity,
//                    mGeomagnetic);
//            if (success) {
//                float orientation[] = new float[3];
//                SensorManager.getOrientation(R, orientation);
//                // Log.d(TAG, "azimuth (rad): " + azimuth);
//                azimuth = (float) Math.toDegrees(orientation[0]); // orientation
//                azimuth = (azimuth + 360) % 360;
//                if (mQuestionLocation != null) {
//                    azimuth -= bearing(currentLatLng.latitude, currentLatLng.longitude,
//                            mQuestionLocation.getLatitude(), mQuestionLocation.getLongitude());
////                            targetLocation.latitude, targetLocation.longitude);
//                    adjustArrow();
//                }
//                // Log.d(TAG, "azimuth (deg): " + azimuth);
//            }
//        }



//    private void adjustArrow() {
//        Animation an = new RotateAnimation(-currectAzimuth, -azimuth,
//                Animation.RELATIVE_TO_SELF, 0.5f, Animation.RELATIVE_TO_SELF,
//                0.5f);
//        currectAzimuth = azimuth;
//
//        an.setDuration(100);
//        an.setFillAfter(true);
//
//        objectDegree = (float) (azimuth + firstTimeDegree);
//
//        Animation an1 = new RotateAnimation(-objectCurrentDegree, -objectDegree,
//                Animation.RELATIVE_TO_SELF, 0.5f, Animation.RELATIVE_TO_SELF,
//                0.5f);
//        objectCurrentDegree = objectDegree;
//        an1.setDuration(100);
//        an1.setFillAfter(true);
//
//        getMvpView().onChangeDirection(an, an1);
//    }